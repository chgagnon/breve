@use Object.

@plugin "GSLRNG_plugin.o" (GSLRNGLoadFunctions).

Object : GSLRNG {
	+ variables:
			rngPointer (pointer).
	+ to init:
			rngPointer = GSLRNG_new().

	+ to set-seed with-seed s (int):
			GSLRNG_set(rngPointer,s).

	+ to get-uniform:
			return GSLRNG_uniform(rngPointer).

	+ to get-uniform-int with-upper u (int):
			return GSLRNG_uniform_int(rngPointer,u).

	+ to get-gaussian with-mu mu (double) and-sigma sigma (double):
			return GSLRNG_gaussian(rngPointer,mu,sigma).

	+ to get-exponential with-mu mu (double):
			return GSLRNG_exponential(rngPointer,mu).

	+ to get-poisson with-mu mu (double):
			return GSLRNG_poisson(rngPointer,mu).

	+ to get-binomial with-p p (double) and-n n (int):
			return GSLRNG_binomial(rngPointer,p,n).

	+ to get-negative-binomial with-p p (double) and-n n (int):
			return GSLRNG_negative_binomial(rngPointer,p,n).

	+ to get-gamma with-a a (double) and-b b (double):
			return GSLRNG_gamma(rngPointer,a,b).

	+ to get-weibull with-a a (double) and-b b (double):
			return GSLRNG_weibull(rngPointer,a,b).

	+ to get-bernoulli with-p p (double):
			return GSLRNG_bernoulli(rngPointer,p).

	+ to geometric with-p p (double):
			return GSLRNG_geometric(rngPointer,p).		

	+ to destroy:
			GSLRNG_free(rngPointer).
}
