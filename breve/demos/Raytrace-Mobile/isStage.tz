@use Object.
@use Stationary.

#@define FLOOR_X 170.
@define FLOOR_Y 0.3.
#@define FLOOR_Z 170.

@define COLOR (0,0.9,0.1).

@define WALL_W 1.
@define WALL_H 4.5.

@define BOUNCE 0.1.

Object : Stage {
	+ variables:
		floor, floor-shape (object).
		wallN, wallS, wall-shape0, wall-shape1 (object).

	+ to init-with size-x FLOOR_X (double) with-size-z FLOOR_Z (double):
		floor-shape = (new Cube init-with size (FLOOR_X, FLOOR_Y, FLOOR_Z)).
#		floor = new Mobile.
#		floor move to (0, -FLOOR_Y/2, 0).
#		floor set-shape to floor-shape.
		floor = new Stationary.
		floor register with-shape floor-shape at-location (0, -FLOOR_Y/2, 0).
		floor set-e to BOUNCE.

		wall-shape0 = (new Cube init-with size (WALL_W, WALL_H, FLOOR_Z + WALL_W)).
#		wallN = new Mobile.
#		wallN move to (FLOOR_X/2, WALL_H/2 - FLOOR_Y/2, 0).
#		wallN set-shape to wall-shape0.
		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (FLOOR_X/2, WALL_H/2 - FLOOR_Y/2, 0).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

#		wallS = new Mobile.
#		wallS move to (-FLOOR_X/2, WALL_H/2 - FLOOR_Y/2, 0).
#		wallS set-shape to wall-shape0.
		wallS = new Stationary.
		wallS register with-shape wall-shape0 at-location (-FLOOR_X/2, WALL_H/2 - FLOOR_Y/2, 0).
		wallS set-e to BOUNCE.
		wallS set-color to (0.5,0,0).

		wall-shape1 = (new Cube init-with size (FLOOR_X + WALL_W, WALL_H, WALL_W)).
#		wallN = new Mobile.
#		wallN move to (0, WALL_H/2 - FLOOR_Y/2, FLOOR_Z/2).
#		wallN set-shape to wall-shape1.
		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (0, WALL_H/2 - FLOOR_Y/2, FLOOR_Z/2).
		wallN set-e to BOUNCE.
		wallN set-color to (0.5,0,0).

#		wallS = new Mobile.
#		wallS move to (0, WALL_H/2 - FLOOR_Y/2, -FLOOR_Z/2).
#		wallS set-shape to wall-shape1.
		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (0, WALL_H/2 - FLOOR_Y/2, -FLOOR_Z/2).
		wallS set-e to BOUNCE.
		wallS set-color to (0.5,0,0).
		
		return self.

}

Object : LabyStage2 {
	+ variables:
		floor, floor-shape (object).
		wallN, wallS, wall-shape0, wall-shape1 (object).

	+ to init-with size-x FLOOR_X (double) with-size-z FLOOR_Z (double):
		floor-shape = (new Cube init-with size (FLOOR_X, FLOOR_Y, FLOOR_Z)).
		floor = new Stationary.
		floor register with-shape floor-shape at-location (0, -FLOOR_Y/2, 0).
		floor set-e to BOUNCE.
#		floor set-color to (144/255, 198/255, 144/255).

		wall-shape0 = (new Cube init-with size (20, WALL_H,  1)).
		wall-shape1 = (new Cube init-with size ( 1, WALL_H, 20)).

#		wallN = new Stationary.
#		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, 0).
#		wallN set-e to BOUNCE.
#		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-20, WALL_H/2 - FLOOR_Y/2, 0).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, -20).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, 20).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

#		wallN = new Stationary.
#		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, 20).
#		wallN set-e to BOUNCE.
#		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-20, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-20, WALL_H/2 - FLOOR_Y/2, -40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, -40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, -40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.


		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (30, WALL_H/2 - FLOOR_Y/2, 30).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (30, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (30, WALL_H/2 - FLOOR_Y/2, -10).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (30, WALL_H/2 - FLOOR_Y/2, -30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (-30, WALL_H/2 - FLOOR_Y/2, 30).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-30, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (-30, WALL_H/2 - FLOOR_Y/2, -10).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-30, WALL_H/2 - FLOOR_Y/2, -30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (10, WALL_H/2 - FLOOR_Y/2, -10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (10, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		

		return self.

}

Object : LabyStage3 {
	+ variables:
		floor, floor-shape (object).
		wallN, wallS, wall-shape0, wall-shape1 (object).

	+ to init:
		FLOOR_X (double).
		FLOOR_Z (double).
	        FLOOR_X = 100.
		FLOOR_Z = 80.
		floor-shape = (new Cube init-with size (FLOOR_X, FLOOR_Y, FLOOR_Z)).
		floor = new Stationary.
		floor register with-shape floor-shape at-location (0, -FLOOR_Y/2, 0).
		floor set-e to BOUNCE.
#		floor set-color to (144/255, 198/255, 144/255).

		wall-shape0 = (new Cube init-with size (20, WALL_H,  1)).
		wall-shape1 = (new Cube init-with size ( 1, WALL_H, 20)).


		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-40, WALL_H/2 - FLOOR_Y/2, -40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-40, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.


		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (40, WALL_H/2 - FLOOR_Y/2, -40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (40, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-20, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-20, WALL_H/2 - FLOOR_Y/2, -40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, -40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, -40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.


		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-50, WALL_H/2 - FLOOR_Y/2, 30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-50, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-50, WALL_H/2 - FLOOR_Y/2, -10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-50, WALL_H/2 - FLOOR_Y/2, -30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (50, WALL_H/2 - FLOOR_Y/2, 30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (50, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (50, WALL_H/2 - FLOOR_Y/2, -10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (50, WALL_H/2 - FLOOR_Y/2, -30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		

		#return self.

}

Object : LabyStage4 {
	+ variables:
		floor, floor-shape (object).
		wallN, wallS, wall-shape0, wall-shape1 (object).

	+ to init:
		FLOOR_X (double).
		FLOOR_Z (double).
	        FLOOR_X = 160.
		FLOOR_Z = 120.
#		floor-shape = (new Cube init-with size (FLOOR_X, FLOOR_Y, FLOOR_Z)).
#		floor = new Stationary.
#		floor register with-shape floor-shape at-location (0, -FLOOR_Y/2, 0).
#		floor set-e to BOUNCE.
#		floor set-color to (144/255, 198/255, 144/255).

		wall-shape0 = (new Cube init-with size (20, WALL_H,  1)).
		wall-shape1 = (new Cube init-with size ( 1, WALL_H, 20)).


		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-80, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-60, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-40, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-20, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (40, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (60, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (80, WALL_H/2 - FLOOR_Y/2, -60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-80, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-60, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-40, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-20, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (40, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (60, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (80, WALL_H/2 - FLOOR_Y/2, 60).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.


		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-80, WALL_H/2 - FLOOR_Y/2, 50).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-80, WALL_H/2 - FLOOR_Y/2, 30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-80, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-80, WALL_H/2 - FLOOR_Y/2, -10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-80, WALL_H/2 - FLOOR_Y/2, -30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-80, WALL_H/2 - FLOOR_Y/2, -50).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (80, WALL_H/2 - FLOOR_Y/2, 50).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (80, WALL_H/2 - FLOOR_Y/2, 30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (80, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (80, WALL_H/2 - FLOOR_Y/2, -10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (80, WALL_H/2 - FLOOR_Y/2, -30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (80, WALL_H/2 - FLOOR_Y/2, -50).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		#end -- outer border 



		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (40, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.


		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, 40).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.


		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (20, WALL_H/2 - FLOOR_Y/2, -20).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (40, WALL_H/2 - FLOOR_Y/2, -20).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.




		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (50, WALL_H/2 - FLOOR_Y/2, 30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (50, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (50, WALL_H/2 - FLOOR_Y/2, -10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.


		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (20, WALL_H/2 - FLOOR_Y/2, 30).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (20, WALL_H/2 - FLOOR_Y/2, -10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		

		#return self.

}

Object : LabyStage5 {
	+ variables:
		floor, floor-shape (object).
		wallN, wallS, wall-shape0, wall-shape1 (object).

	+ to init:
		FLOOR_X (double).
		FLOOR_Z (double).
	        FLOOR_X = 160.
		FLOOR_Z = 120.
#		floor-shape = (new Cube init-with size (FLOOR_X, FLOOR_Y, FLOOR_Z)).
#		floor = new Stationary.
#		floor register with-shape floor-shape at-location (0, -FLOOR_Y/2, 0).
#		floor set-e to BOUNCE.
#		floor set-color to (144/255, 198/255, 144/255).

		wall-shape0 = (new Cube init-with size (200, WALL_H,  1)).
		wall-shape1 = (new Cube init-with size ( 1, WALL_H, 200)).


		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (-100, WALL_H/2 - FLOOR_Y/2, 0).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (100, WALL_H/2 - FLOOR_Y/2, 0).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.


		wallS = new Stationary.
		wallS register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, -100).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, 100).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.

		#return self.

}


Object : DemoStage {
	+ variables:
		floor, floor-shape (object).
		wallN, wallS, wall-shape0, wall-shape1 (object).

	+ to init:
		floor-shape = (new Cube init-with size (45, FLOOR_Y, 55)).
		floor = new Stationary.
		floor register with-shape floor-shape at-location (0, -FLOOR_Y/2, 0).
		floor set-e to BOUNCE.
#		floor set-color to (144/255, 198/255, 144/255).

		wall-shape0 = (new Cube init-with size (20, WALL_H,  1)).
		wall-shape1 = (new Cube init-with size ( 1, WALL_H, 20)).

		#horizontale innenwände

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (13, WALL_H/2 - FLOOR_Y/2, 13).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-13, WALL_H/2 - FLOOR_Y/2, 0).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (13, WALL_H/2 - FLOOR_Y/2, -13).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		#horizontale Außenwände

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-13, WALL_H/2 - FLOOR_Y/2, 28).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, 28).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (13, WALL_H/2 - FLOOR_Y/2, 28).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (-13, WALL_H/2 - FLOOR_Y/2, -28).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (0, WALL_H/2 - FLOOR_Y/2, -28).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallN = new Stationary.
		wallN register with-shape wall-shape0 at-location (13, WALL_H/2 - FLOOR_Y/2, -28).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.


		#vertikale Außenwände

		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (23, WALL_H/2 - FLOOR_Y/2, 18.5).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (23, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (23, WALL_H/2 - FLOOR_Y/2, -10).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (23, WALL_H/2 - FLOOR_Y/2, -18.5).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (-23, WALL_H/2 - FLOOR_Y/2, 18.5).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-23, WALL_H/2 - FLOOR_Y/2, 10).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
		
		wallN = new Stationary.
		wallN register with-shape wall-shape1 at-location (-23, WALL_H/2 - FLOOR_Y/2, -10).
		wallN set-e to BOUNCE.
		wallN set-color to COLOR.

		wallS = new Stationary.
		wallS register with-shape wall-shape1 at-location (-23, WALL_H/2 - FLOOR_Y/2, -18.5).
		wallS set-e to BOUNCE.
		wallS set-color to COLOR.
				

		return self.

}
