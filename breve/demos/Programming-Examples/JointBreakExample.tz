# 
# A simple demo to illustrate the breaking and adoption of 
# a Link.
#

@include "PhysicalControl.tz"
@include "Joint.tz"
@include "MultiBody.tz"
@include "Link.tz"
@include "Shape.tz"
@include "Stationary.tz"

Controller JointTest.

PhysicalControl : JointTest {
	+ variables:
		body1, body2 (object).
		joint (object).

	+ to init:
		new Stationary register with-shape (new Shape init-with-cube size (100, 0.1, 100)) at-location (0, 0, 0).
		body1 = (new Body fix at (0, 10, 0)).
		body2 = (new Body fix at (5, 10, 0)).

		body1 set-color to random[(1, 1, 1)].
		body2 set-color to random[(1, 1, 1)].

		self point-camera at (2, 8, 0) from (0, 10, 30).

		self set-display-text to "hit 'l' to join the links" at-x -.98 at-y -.98.

		self set-background-color to (0.4, 0.4, 0.4).

	+ to catch-key-l-down:
		if joint: return.

		joint = new RevoluteJoint.
		joint link parent (body1 get-bottom-link) to-child (body2 get-bottom-link) 
			with-parent-point (0, 1, 0) with-child-point (0, 1, 0) with-normal (0, 0, 1).
		joint set-joint-damping to .1.

		self set-display-text to "hit 'z' to break the multibody" at-x -.98 at-y -.98.

	+ to catch-key-b-down:
		if joint: free joint.

	+ to catch-key-z-down:
		if (body1 get-middle-joint): free (body1 get-middle-joint).

		self set-display-text to "note the change in color: the link has switched bodies" at-x -.98 at-y -.98.
}


MultiBody : Body {
	+ variables:
		shape, joint, worldJoint (object).
		links (list).
		i (int).

	+ to init:
		shape = new Shape.
		shape init-with-cube size (1.0, 2.0, 1.0).

		links = 2 new Links.
		links set shape shape.

		joint = new RevoluteJoint.
		joint link parent links{0} to-child links{1} 
			with-parent-point (0, 1.0, 0) with-child-point (0, -1.0, 0) with-normal (1, 0, 0).
		joint set-joint-damping to .1.

		self set-root to links{0}.

	+ to fix at point (vector):
		worldJoint = new RevoluteJoint.
		worldJoint link parent 0 to-child links{0} 
			with-parent-point point with-child-point (0, -1.0, 0) with-normal (0, 0, 1).

		worldJoint set-joint-damping to .1.

		return self.

	+ to iterate:
		i++.

	+ to get-middle-joint:
		return joint.

	+ to get-bottom-link:
		return links{1}.
}


